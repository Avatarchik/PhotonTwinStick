//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity pseudoEntity { get { return GetGroup(GameMatcher.Pseudo).GetSingleEntity(); } }
    public PseudoComponent pseudo { get { return pseudoEntity.pseudo; } }
    public bool hasPseudo { get { return pseudoEntity != null; } }

    public GameEntity SetPseudo(string newPseudo) {
        if (hasPseudo) {
            throw new Entitas.EntitasException("Could not set Pseudo!\n" + this + " already has an entity with PseudoComponent!",
                "You should check if the context already has a pseudoEntity before setting it or use context.ReplacePseudo().");
        }
        var entity = CreateEntity();
        entity.AddPseudo(newPseudo);
        return entity;
    }

    public void ReplacePseudo(string newPseudo) {
        var entity = pseudoEntity;
        if (entity == null) {
            entity = SetPseudo(newPseudo);
        } else {
            entity.ReplacePseudo(newPseudo);
        }
    }

    public void RemovePseudo() {
        pseudoEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PseudoComponent pseudo { get { return (PseudoComponent)GetComponent(GameComponentsLookup.Pseudo); } }
    public bool hasPseudo { get { return HasComponent(GameComponentsLookup.Pseudo); } }

    public void AddPseudo(string newPseudo) {
        var index = GameComponentsLookup.Pseudo;
        var component = CreateComponent<PseudoComponent>(index);
        component.Pseudo = newPseudo;
        AddComponent(index, component);
    }

    public void ReplacePseudo(string newPseudo) {
        var index = GameComponentsLookup.Pseudo;
        var component = CreateComponent<PseudoComponent>(index);
        component.Pseudo = newPseudo;
        ReplaceComponent(index, component);
    }

    public void RemovePseudo() {
        RemoveComponent(GameComponentsLookup.Pseudo);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPseudo;

    public static Entitas.IMatcher<GameEntity> Pseudo {
        get {
            if (_matcherPseudo == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Pseudo);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPseudo = matcher;
            }

            return _matcherPseudo;
        }
    }
}
